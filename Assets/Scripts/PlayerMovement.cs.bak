using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEditor;
using UnityEditor.Animations;
using System.Linq;

public class PlayerMovement : MonoBehaviour
{
	public float moveSpeed = 5f;
	    AnimatorClipInfo[] m_CurrentClipInfo;
    string m_ClipName;
	public Rigidbody2D rb;
	public Animator animator;
	Vector2 movement;
	//public Joystick joystick;
	public MovementEvents moveEvent;

	public AnimationClip[] clip;

	//protected AnimatorOverrideController animatorOverrideController;
	

	int dir;

	void Start()
	{
		dir = GetDirection();
		Debug.Log("Dir is " + dir);

		var animatorOverrideController = (AnimatorController)animator.runtimeAnimatorController;
		var state = animatorOverrideController.layers[0].stateMachine.states.FirstOrDefault(s => s.state.name.Equals("Default")).state;
		if (state == null)
		{
    		Debug.Log("Couldn't get the state!");
    		
		}
		else
		{
			Debug.Log("Setting new anim");
			animatorOverrideController.SetStateEffectiveMotion(state, clip[dir]);
		}
		
		//animatorOverrideController = new AnimatorOverrideController(animator.runtimeAnimatorController);
        //animator.runtimeAnimatorController = animatorOverrideController;
		//animatorOverrideController["Default"] = clip[dir];
		//if(animator.GetCurrentAnimatorStateInfo(0).IsName("Default"))
		//{
		//	animator.GetCurrentAnimatorStateInfo(0)
		//}
		Debug.Log("Dir is " + dir + " clip is ");// + animatorOverrideController["Player"].name);
		//default_motion = animator.GetCurrentAnimatorStateInfo(0).motion;

	}
    // Update is called once per frame
    void Update()
    {

		if(moveEvent.x == 1)
		{
			animator.SetBool("Init", false);
			movement.x = 1;
			
		}
		else if(moveEvent.x == -1)
		{
			movement.x = -1;
			animator.SetBool("Init", false);
		}
		else
		{
			movement.x = 0;
		}
		
		if (moveEvent.y == 1)
		{
			animator.SetBool("Init", false);
			movement.y = 1;
		}
		else if (moveEvent.y == -1)
		{
			animator.SetBool("Init", false);
			movement.y = -1;
		}
		else
		{
			movement.y = 0;
		}
		
		/*if (joystick.Horizontal > .2f)
		{
			animator.SetBool("Init", false);
			movement.x = 1;
		}
		else if (joystick.Horizontal <= -.2f)
		{
			movement.x = -1;
			animator.SetBool("Init", false);
		}
		else
		{
			movement.x = 0;
		}

		if (joystick.Vertical > .2f)
		{
			animator.SetBool("Init", false);
			movement.y = 1;
		}
		else if (joystick.Vertical <= -.2f)
		{
			animator.SetBool("Init", false);
			movement.y = -1;
		}
		else
		{
			movement.y = 0;
		}*/
		
		animator.SetFloat("Horizontal", movement.x);
		animator.SetFloat("Vertical", movement.y);
		if(movement.x == 0 && movement.y == 0)
		{
		}
		else
		{
			animator.SetFloat("LastX",movement.x);
			animator.SetFloat("LastY",movement.y);
			animator.SetFloat("HitX",movement.x);
			animator.SetFloat("HitY",movement.y);
		}
		animator.SetFloat("Speed", movement.sqrMagnitude);
		animator.SetInteger("Direction", dir);
		//Debug.Log(movement.x + " " + movement.y);

    }
	
	void FixedUpdate()
	{
		rb.MovePosition(rb.position + movement * moveSpeed * Time.fixedDeltaTime);
	}

	public void SetDirection(int d)
	{
		dir = d;
	}

	public int GetDirection()
	{
		return dir;
	}
}
